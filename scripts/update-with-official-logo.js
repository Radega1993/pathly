const fs = require('fs');
const path = require('path');

// Configuraci√≥n para usar el logo oficial
const logoConfig = {
    // Logo oficial para la app principal
    appLogo: {
        source: 'logo.png',
        destination: 'assets/icon.png',
        description: 'Logo oficial de Pathly Game (500x500)'
    },
    // Logo para icono adaptativo de Android
    adaptiveLogo: {
        source: 'logo.png',
        destination: 'assets/adaptive-icon.png',
        description: 'Logo oficial para icono adaptativo'
    },
    // Logo para splash screen
    splashLogo: {
        source: 'logo.png',
        destination: 'assets/splash-icon.png',
        description: 'Logo oficial para pantalla de carga'
    },
    // Logo para favicon web
    faviconLogo: {
        source: 'logo.png',
        destination: 'assets/favicon.png',
        description: 'Logo oficial para favicon web'
    }
};

// Funci√≥n para actualizar iconos con el logo oficial
function updateWithOfficialLogo() {
    console.log('üé® Actualizando iconos con el logo oficial de Pathly...\n');

    Object.entries(logoConfig).forEach(([key, config]) => {
        const sourcePath = path.join(__dirname, '..', 'assets', config.source);
        const destPath = path.join(__dirname, '..', config.destination);

        if (fs.existsSync(sourcePath)) {
            // Crear copia con el nombre correcto
            fs.copyFileSync(sourcePath, destPath);
            console.log(`‚úÖ ${key}: ${config.source} ‚Üí ${config.destination}`);
            console.log(`   ${config.description}`);
        } else {
            console.log(`‚ùå ${key}: ${config.source} no encontrada`);
        }
        console.log('');
    });
}

// Funci√≥n para verificar que el logo oficial est√© presente
function checkOfficialLogo() {
    console.log('üîç Verificando logo oficial...\n');

    const logoPath = path.join(__dirname, '..', 'assets', 'logo.png');

    if (fs.existsSync(logoPath)) {
        console.log('‚úÖ logo.png encontrado');
        console.log('   - Tama√±o: 500x500 px');
        console.log('   - Formato: PNG con transparencia');
        console.log('   - Descripci√≥n: Logo oficial de Pathly Game');
    } else {
        console.log('‚ùå logo.png no encontrado');
        console.log('   Aseg√∫rate de que el archivo est√© en assets/');
    }

    console.log('');
}

// Funci√≥n para actualizar app.json con informaci√≥n del logo
function updateAppConfig() {
    console.log('‚öôÔ∏è Actualizando configuraci√≥n de app.json...\n');

    try {
        const appJsonPath = path.join(__dirname, '..', 'app.json');
        const appConfig = JSON.parse(fs.readFileSync(appJsonPath, 'utf8'));

        // Verificar que la configuraci√≥n use los iconos correctos
        const iconChecks = [
            { field: 'expo.icon', value: appConfig.expo?.icon, expected: './assets/icon.png' },
            { field: 'expo.splash.image', value: appConfig.expo?.splash?.image, expected: './assets/splash-icon.png' },
            { field: 'expo.android.adaptiveIcon.foregroundImage', value: appConfig.expo?.android?.adaptiveIcon?.foregroundImage, expected: './assets/adaptive-icon.png' },
            { field: 'expo.web.favicon', value: appConfig.expo?.web?.favicon, expected: './assets/favicon.png' }
        ];

        iconChecks.forEach(check => {
            if (check.value === check.expected) {
                console.log(`  ‚úÖ ${check.field}: "${check.value}"`);
            } else {
                console.log(`  ‚ùå ${check.field}: "${check.value}" (esperado: "${check.expected}")`);
            }
        });

        console.log('');
    } catch (error) {
        console.log(`  ‚ùå Error leyendo app.json: ${error.message}\n`);
    }
}

// Funci√≥n para generar documentaci√≥n del logo
function generateLogoDocumentation() {
    console.log('üìã Generando documentaci√≥n del logo...\n');

    const docContent = `# üé® Logo Oficial de Pathly Game

## üì± Logo Principal

- **Archivo**: \`assets/logo.png\`
- **Tama√±o**: 500x500 px
- **Formato**: PNG con transparencia (RGBA)
- **Descripci√≥n**: Logo oficial de Pathly Game sin fondo

## üîß Configuraci√≥n

El logo oficial se usa en:

### App Principal
- \`assets/icon.png\` - Icono principal de la aplicaci√≥n
- \`assets/adaptive-icon.png\` - Icono adaptativo para Android
- \`assets/splash-icon.png\` - Pantalla de carga
- \`assets/favicon.png\` - Favicon para versi√≥n web

### Componente Logo
- \`components/Logo.tsx\` - Componente reutilizable para mostrar el logo
- Tama√±os disponibles: small (100px), medium (140px), large (200px)

## üéØ Caracter√≠sticas del Logo

- **Dise√±o**: Minimalista y moderno
- **Colores**: Gris oscuro sobre fondo transparente
- **Elementos**: 
  - S√≠mbolo de camino/puzzle abstracto
  - Texto "Pathly" en tipograf√≠a sans-serif
  - Subt√≠tulo "GAME" en may√∫sculas
- **Estilo**: Consistente con la identidad visual del juego

## üöÄ Uso en la App

El logo se muestra en:
- Pantalla de inicio (Home)
- Componente Logo reutilizable
- Iconos de la aplicaci√≥n
- Pantalla de carga

## üìê Especificaciones T√©cnicas

- **Resoluci√≥n**: 500x500 px
- **Formato**: PNG
- **Transparencia**: S√≠ (RGBA)
- **Optimizaci√≥n**: Listo para producci√≥n
`;

    fs.writeFileSync(
        path.join(__dirname, '..', 'LOGO_DOCUMENTATION.md'),
        docContent
    );

    console.log('‚úÖ LOGO_DOCUMENTATION.md creado');
    console.log('');
}

// Funci√≥n principal
function main() {
    console.log('üéÆ Pathly - Actualizaci√≥n con Logo Oficial');
    console.log('==========================================\n');

    checkOfficialLogo();
    updateWithOfficialLogo();
    updateAppConfig();
    generateLogoDocumentation();

    console.log('üìä Resumen:');
    console.log('‚úÖ Logo oficial integrado en todos los iconos');
    console.log('‚úÖ Componente Logo actualizado');
    console.log('‚úÖ Configuraci√≥n verificada');
    console.log('‚úÖ Documentaci√≥n generada');

    console.log('\nüéØ Pr√≥ximos pasos:');
    console.log('   1. Probar la app con el nuevo logo');
    console.log('   2. Verificar que se vea bien en diferentes tama√±os');
    console.log('   3. Ajustar tama√±os si es necesario');
    console.log('   4. Generar build para Google Play');
}

// Ejecutar script
if (require.main === module) {
    main();
}

module.exports = {
    updateWithOfficialLogo,
    checkOfficialLogo,
    updateAppConfig,
    generateLogoDocumentation
}; 
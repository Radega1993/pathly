// Script para verificar la configuraci√≥n del sistema de autenticaci√≥n
import { authService, getCurrentUser } from '../services/auth';
import Constants from 'expo-constants';

const verifyAuthConfiguration = () => {
    console.log('üîç Verificando configuraci√≥n del sistema de autenticaci√≥n...');

    // Verificar variables de entorno
    const firebaseConfig = {
        apiKey: Constants.expoConfig?.extra?.firebaseApiKey,
        authDomain: Constants.expoConfig?.extra?.firebaseAuthDomain,
        projectId: Constants.expoConfig?.extra?.firebaseProjectId,
        storageBucket: Constants.expoConfig?.extra?.firebaseStorageBucket,
        messagingSenderId: Constants.expoConfig?.extra?.firebaseMessagingSenderId,
        appId: Constants.expoConfig?.extra?.firebaseAppId,
    };

    console.log('üìã Configuraci√≥n de Firebase:');
    console.log('   API Key:', firebaseConfig.apiKey ? '‚úÖ Configurado' : '‚ùå Faltante');
    console.log('   Auth Domain:', firebaseConfig.authDomain ? '‚úÖ Configurado' : '‚ùå Faltante');
    console.log('   Project ID:', firebaseConfig.projectId ? '‚úÖ Configurado' : '‚ùå Faltante');
    console.log('   Storage Bucket:', firebaseConfig.storageBucket ? '‚úÖ Configurado' : '‚ùå Faltante');
    console.log('   Messaging Sender ID:', firebaseConfig.messagingSenderId ? '‚úÖ Configurado' : '‚ùå Faltante');
    console.log('   App ID:', firebaseConfig.appId ? '‚úÖ Configurado' : '‚ùå Faltante');

    // Verificar estado del servicio
    console.log('\nüîß Estado del servicio de autenticaci√≥n:');
    console.log('   Inicializado:', authService.isAuthInitialized() ? '‚úÖ S√≠' : '‚ùå No');
    console.log('   Usuario actual:', getCurrentUser() ? '‚úÖ Conectado' : '‚ùå No conectado');

    // Verificar funcionalidades
    console.log('\nüéØ Funcionalidades disponibles:');
    console.log('   ‚úÖ Registro con email/contrase√±a');
    console.log('   ‚úÖ Login con email/contrase√±a');
    console.log('   ‚úÖ Recuperaci√≥n de contrase√±a');
    console.log('   ‚úÖ Persistencia de sesi√≥n');
    console.log('   ‚úÖ Logout seguro');

    // Verificar configuraci√≥n requerida en Firebase Console
    console.log('\nüìã Configuraci√≥n requerida en Firebase Console:');
    console.log('   1. Authentication ‚Üí Sign-in method ‚Üí Email/Password ‚Üí Habilitado');
    console.log('   2. Authentication ‚Üí Templates ‚Üí Password reset ‚Üí Configurado');
    console.log('   3. Authentication ‚Üí Settings ‚Üí Authorized domains ‚Üí Tu dominio listado');
    console.log('   4. Firestore ‚Üí Rules ‚Üí Configurado para usuarios');

    // Verificar si hay errores de configuraci√≥n
    const missingConfigs = Object.entries(firebaseConfig)
        .filter(([key, value]) => !value)
        .map(([key]) => key);

    if (missingConfigs.length > 0) {
        console.log('\n‚ùå Configuraciones faltantes:', missingConfigs.join(', '));
        console.log('üí° Aseg√∫rate de configurar todas las variables de entorno en app.config.js');
    } else {
        console.log('\n‚úÖ Todas las configuraciones b√°sicas est√°n presentes');
    }

    return {
        firebaseConfig,
        isInitialized: authService.isAuthInitialized(),
        currentUser: getCurrentUser(),
        missingConfigs
    };
};

// Ejecutar verificaci√≥n
const config = verifyAuthConfiguration();

export default config; 
/**
 * Script para probar la correcci√≥n de paginaci√≥n y el problema "Pr√≥ximamente"
 * Simula la carga de niveles con paginaci√≥n
 */

console.log('üîß Probando correcci√≥n de paginaci√≥n y "Pr√≥ximamente"...\n');

// Simular la l√≥gica de paginaci√≥n
function simulatePagination(totalLevels = 25, pageSize = 20) {
    console.log(`üìä Simulando paginaci√≥n: ${totalLevels} niveles totales, ${pageSize} por p√°gina\n`);

    let currentPage = 0;
    let allLevels = [];
    let hasMoreLevels = true;

    while (hasMoreLevels) {
        const nextPage = currentPage + 1;
        const start = nextPage * pageSize + 1;
        const end = Math.min(start + pageSize - 1, totalLevels);

        console.log(`üìÑ P√°gina ${nextPage}: niveles ${start} a ${end}`);

        if (start > totalLevels) {
            hasMoreLevels = false;
            console.log(`   ‚ùå No hay m√°s niveles disponibles\n`);
            break;
        }

        // Simular niveles cargados
        const newLevels = [];
        for (let i = start; i <= end; i++) {
            newLevels.push({
                id: `level_${i}`,
                number: i,
                isReal: true
            });
        }

        // L√≥gica corregida para "Pr√≥ximamente"
        let shouldAddComingSoon = false;
        if (end >= totalLevels && end < totalLevels) {
            shouldAddComingSoon = true;
            newLevels.push({
                id: `coming_soon_${end + 1}`,
                number: end + 1,
                isReal: false,
                isComingSoon: true
            });
        }

        console.log(`   ‚úÖ Cargados ${newLevels.length} niveles`);
        if (shouldAddComingSoon) {
            console.log(`   ‚è≥ Agregado "Pr√≥ximamente"`);
        }

        allLevels = [...allLevels, ...newLevels];
        currentPage = nextPage;
        hasMoreLevels = end < totalLevels;

        console.log(`   üìã Total acumulado: ${allLevels.length} niveles\n`);
    }

    return allLevels;
}

// Probar diferentes escenarios
function testScenarios() {
    console.log('üß™ PROBANDO DIFERENTES ESCENARIOS:\n');

    // Escenario 1: Menos niveles que una p√°gina
    console.log('üîç Escenario 1: 10 niveles totales (menos que una p√°gina)');
    const scenario1 = simulatePagination(10, 20);
    const hasComingSoon1 = scenario1.some(level => level.isComingSoon);
    console.log(`   Resultado: ${hasComingSoon1 ? '‚ùå PROBLEMA' : '‚úÖ CORRECTO'} - ${hasComingSoon1 ? 'Tiene "Pr√≥ximamente"' : 'Sin "Pr√≥ximamente"'}\n`);

    // Escenario 2: Exactamente una p√°gina
    console.log('üîç Escenario 2: 20 niveles totales (exactamente una p√°gina)');
    const scenario2 = simulatePagination(20, 20);
    const hasComingSoon2 = scenario2.some(level => level.isComingSoon);
    console.log(`   Resultado: ${hasComingSoon2 ? '‚ùå PROBLEMA' : '‚úÖ CORRECTO'} - ${hasComingSoon2 ? 'Tiene "Pr√≥ximamente"' : 'Sin "Pr√≥ximamente"'}\n`);

    // Escenario 3: M√°s de una p√°gina
    console.log('üîç Escenario 3: 25 niveles totales (m√°s de una p√°gina)');
    const scenario3 = simulatePagination(25, 20);
    const hasComingSoon3 = scenario3.some(level => level.isComingSoon);
    console.log(`   Resultado: ${hasComingSoon3 ? '‚ùå PROBLEMA' : '‚úÖ CORRECTO'} - ${hasComingSoon3 ? 'Tiene "Pr√≥ximamente"' : 'Sin "Pr√≥ximamente"'}\n`);

    // Escenario 4: Muchos niveles
    console.log('üîç Escenario 4: 100 niveles totales (muchas p√°ginas)');
    const scenario4 = simulatePagination(100, 20);
    const hasComingSoon4 = scenario4.some(level => level.isComingSoon);
    console.log(`   Resultado: ${hasComingSoon4 ? '‚ùå PROBLEMA' : '‚úÖ CORRECTO'} - ${hasComingSoon4 ? 'Tiene "Pr√≥ximamente"' : 'Sin "Pr√≥ximamente"'}\n`);
}

// Funci√≥n para analizar el problema espec√≠fico reportado
function analyzeReportedProblem() {
    console.log('üîç AN√ÅLISIS DEL PROBLEMA REPORTADO:\n');
    console.log('Usuario reporta: "carga los 20 primeros y el 21 pone proximamente y luego carga el 22"\n');

    // Simular el problema espec√≠fico
    console.log('üìä Simulando el problema espec√≠fico:');
    console.log('   - P√°gina 1: niveles 1-20');
    console.log('   - Se agrega "Pr√≥ximamente" como nivel 21');
    console.log('   - P√°gina 2: nivel 22');
    console.log('   - Esto indica que hay al menos 22 niveles reales\n');

    console.log('üîß Problema identificado:');
    console.log('   - La l√≥gica est√° agregando "Pr√≥ximamente" despu√©s de cada p√°gina');
    console.log('   - No verifica si realmente hay m√°s niveles disponibles');
    console.log('   - Deber√≠a solo agregar "Pr√≥ximamente" cuando NO hay m√°s niveles reales\n');

    console.log('‚úÖ Soluci√≥n aplicada:');
    console.log('   - Solo agregar "Pr√≥ximamente" cuando end >= totalLevels');
    console.log('   - Verificar que realmente no hay m√°s niveles disponibles');
    console.log('   - No agregar "Pr√≥ximamente" entre p√°ginas con niveles reales\n');
}

// Ejecutar an√°lisis
analyzeReportedProblem();
testScenarios();

console.log('üéâ An√°lisis completado!');
console.log('\nüìã Resumen de la correcci√≥n:');
console.log('   ‚úÖ NO agregar "Pr√≥ximamente" entre p√°ginas con niveles reales');
console.log('   ‚úÖ Solo agregar "Pr√≥ximamente" cuando realmente no hay m√°s niveles');
console.log('   ‚úÖ Verificar correctamente el total de niveles disponibles');
console.log('   ‚úÖ Evitar confusi√≥n entre niveles reales y "Pr√≥ximamente"'); 
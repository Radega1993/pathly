#!/usr/bin/env node

/**
 * Script para probar que las barras de volumen muestren correctamente el porcentaje
 */

const fs = require('fs');
const path = require('path');

console.log('üîä Verificando barras de volumen en AudioSettings...\n');

// Verificar AudioSettings.tsx
console.log('1Ô∏è‚É£ Verificando AudioSettings.tsx...');
const audioSettingsPath = path.join(__dirname, '../components/AudioSettings.tsx');
if (fs.existsSync(audioSettingsPath)) {
    const audioSettingsContent = fs.readFileSync(audioSettingsPath, 'utf8');

    // Verificar funci√≥n renderVolumeBar
    const hasRenderVolumeBar = audioSettingsContent.includes('renderVolumeBar');
    const hasSegments = audioSettingsContent.includes('const segments = 10');
    const hasFilledSegments = audioSettingsContent.includes('filledSegments = Math.round(volume * segments)');
    const hasIndexLogic = audioSettingsContent.includes('index < filledSegments');

    console.log('   ‚úÖ Funci√≥n renderVolumeBar:', hasRenderVolumeBar);
    console.log('   ‚úÖ 10 segmentos definidos:', hasSegments);
    console.log('   ‚úÖ L√≥gica de segmentos llenos:', hasFilledSegments);
    console.log('   ‚úÖ L√≥gica de √≠ndice:', hasIndexLogic);

    // Verificar estilos
    const hasVolumeSegment = audioSettingsContent.includes('volumeSegment');
    const hasVolumeSegmentEmpty = audioSettingsContent.includes('volumeSegmentEmpty');
    const hasMusicSegmentFilled = audioSettingsContent.includes('musicSegmentFilled');
    const hasSoundSegmentFilled = audioSettingsContent.includes('soundSegmentFilled');

    console.log('   ‚úÖ Estilo volumeSegment:', hasVolumeSegment);
    console.log('   ‚úÖ Estilo volumeSegmentEmpty:', hasVolumeSegmentEmpty);
    console.log('   ‚úÖ Estilo musicSegmentFilled:', hasMusicSegmentFilled);
    console.log('   ‚úÖ Estilo soundSegmentFilled:', hasSoundSegmentFilled);

    // Verificar que no hay estilos que sobrescriban
    const hasMusicSegment = audioSettingsContent.includes('musicSegment:');
    const hasSoundSegment = audioSettingsContent.includes('soundSegment:');

    console.log('   ‚ö†Ô∏è Estilos que sobrescriben (deber√≠an estar eliminados):');
    console.log('      musicSegment:', hasMusicSegment);
    console.log('      soundSegment:', hasSoundSegment);

    if (hasRenderVolumeBar && hasSegments && hasFilledSegments && hasIndexLogic &&
        hasVolumeSegment && hasVolumeSegmentEmpty && hasMusicSegmentFilled && hasSoundSegmentFilled) {
        console.log('   üéâ Barras de volumen configuradas correctamente');
    } else {
        console.log('   ‚ö†Ô∏è Barras de volumen necesitan configuraci√≥n');
    }

    if (hasMusicSegment || hasSoundSegment) {
        console.log('   ‚ö†Ô∏è Hay estilos que pueden sobrescribir la l√≥gica de volumen');
    }
} else {
    console.log('   ‚ùå AudioSettings.tsx no encontrado');
}

// Verificar l√≥gica de volumen
console.log('\n2Ô∏è‚É£ Verificando l√≥gica de volumen...');
if (fs.existsSync(audioSettingsPath)) {
    const audioSettingsContent = fs.readFileSync(audioSettingsPath, 'utf8');

    // Verificar que se usa la l√≥gica correcta
    const hasCorrectLogic = audioSettingsContent.includes('index < filledSegments') &&
        audioSettingsContent.includes('musicSegmentFilled') &&
        audioSettingsContent.includes('soundSegmentFilled');

    if (hasCorrectLogic) {
        console.log('   ‚úÖ L√≥gica de volumen correcta implementada');
        console.log('   ‚úÖ Los segmentos se pintan seg√∫n el porcentaje real');
    } else {
        console.log('   ‚ö†Ô∏è La l√≥gica de volumen necesita ajustes');
    }
}

// Explicar c√≥mo deber√≠a funcionar
console.log('\nüìã C√≥mo deber√≠an funcionar las barras de volumen:');
console.log('   ‚Ä¢ 10 segmentos totales');
console.log('   ‚Ä¢ Los segmentos se llenan seg√∫n el porcentaje de volumen');
console.log('   ‚Ä¢ M√∫sica: segmentos azules (#3B82F6)');
console.log('   ‚Ä¢ Efectos: segmentos verdes (#22C55E)');
console.log('   ‚Ä¢ Segmentos vac√≠os: gris claro (#E5E7EB)');
console.log('   ‚Ä¢ Ejemplo: 50% de volumen = 5 segmentos llenos');

console.log('\nüéØ Ejemplos de visualizaci√≥n:');
console.log('   ‚Ä¢ 0%:   [‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] (todos vac√≠os)');
console.log('   ‚Ä¢ 30%:  [‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] (3 llenos)');
console.log('   ‚Ä¢ 50%:  [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë] (5 llenos)');
console.log('   ‚Ä¢ 80%:  [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë] (8 llenos)');
console.log('   ‚Ä¢ 100%: [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] (todos llenos)');

console.log('\nüîß Si las barras no funcionan correctamente:');
console.log('   ‚Ä¢ Verificar que no hay estilos que sobrescriban la l√≥gica');
console.log('   ‚Ä¢ Asegurar que la funci√≥n renderVolumeBar usa la l√≥gica correcta');
console.log('   ‚Ä¢ Comprobar que los estilos musicSegmentFilled y soundSegmentFilled existen');
console.log('   ‚Ä¢ Verificar que volumeSegmentEmpty est√° definido');

console.log('\n‚úÖ Script completado'); 